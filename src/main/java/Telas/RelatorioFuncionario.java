/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Telas;

import DAO.ComboDao;
import DAO.funcionarioDao;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author julianob
 */
public class RelatorioFuncionario extends javax.swing.JFrame {

    private char Status;
    private String Cargo;

    /**
     * Creates new form RelatorioFuncionario
     */
    public RelatorioFuncionario() {
        initComponents();
        CarregarJtable();
        PreenchercomboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ComboBox = new javax.swing.JComboBox<>();
        Limpar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabela = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(176, 208, 212));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Funcionario");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Relatorio Funcionario");

        Limpar.setText("< voltar");
        Limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimparActionPerformed(evt);
            }
        });

        jButton3.setText("enter");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        Tabela.setForeground(new java.awt.Color(0, 0, 0));
        Tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "cargo", "Nome ", "salario", "Valor em vendas"
            }
        ));
        Tabela.setFocusable(false);
        Tabela.setGridColor(new java.awt.Color(204, 0, 255));
        Tabela.setInheritsPopupMenu(true);
        Tabela.setOpaque(false);
        Tabela.setSelectionBackground(new java.awt.Color(0, 0, 0));
        Tabela.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane2.setViewportView(Tabela);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(85, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(63, 63, 63)
                                .addComponent(ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(254, 254, 254))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(Limpar)
                        .addGap(164, 164, 164)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(177, 177, 177))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel7)
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(Limpar))
                .addGap(26, 26, 26))
        );

        jMenu1.setText("Menu");

        jMenuItem1.setText("Relatorio Cliente");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimparActionPerformed
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_LimparActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String funcionario = (String) ComboBox.getSelectedItem();
        carregar(funcionario);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // Ação executada quando o item de menu "Relatório de Clientes" é selecionado.
        // Verifica se o usuário tem permissão para visualizar o relatório.

        if (Cargo.equalsIgnoreCase("gerente") && Status == 'S' || Cargo.equalsIgnoreCase("financeiro") && Status == 'S') {
            RelatorioClientes rc = new RelatorioClientes();
            rc.setTipoUsuario(Cargo, Status);
            rc.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a isso");
        }         
                   // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed
   /**
     * Carrega os dados da tabela de vendas de um funcionário específico.
     * @param nome O nome do funcionário para procurar suas vendas.
     */
    public void carregar(String nome) {
        funcionarioDao funcionario = new funcionarioDao();
        List<Object[]> test = funcionario.procurarVendaDosFuncionariosPorNome(nome);

        DefaultTableModel model = (DefaultTableModel) Tabela.getModel();
        model.setRowCount(0); // Limpa a tabela antes de adicionar novos dados

        for (Object[] resultado : test) {
            model.addRow(resultado);
        }
    }

    /**
     * Carrega todos os dados da tabela de vendas dos funcionários.
     */
    public void CarregarJtable() {
        funcionarioDao funcionario = new funcionarioDao();

        List<Object[]> test = funcionario.procurarVendaDosFuncionarios();
        for (Object[] resultado : test) {
            DefaultTableModel model = (DefaultTableModel) Tabela.getModel();
            model.addRow(resultado);
        }
    }

    /**
     * Preenche o ComboBox com os nomes dos funcionários.
     */

    /**
     * Preenche o ComboBox com os nomes dos funcionários.
     */
    public void PreenchercomboBox() {
        ComboDao p = new ComboDao();
        List<String> funcionarios = p.listarFuncionario();

        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();

        for (String funcionario : funcionarios) {
            if (!exist(model, funcionario)) {
                model.addElement(funcionario);
            }
        }
        ComboBox.setModel(model);
    }

    /**
     * Verifica se um elemento já existe em um ComboBox.
     *
     * @param model O ComboBoxModel.
     * @param categoria O elemento a ser verificado.
     * @return true se o elemento existir no ComboBox, false caso contrário.
     */
    public boolean exist(DefaultComboBoxModel<String> model, String categoria) {
        for (int i = 0; i < model.getSize(); i++) {

            String elemento = model.getElementAt(i);

            if (elemento != null && elemento.equals(categoria)) {
                return true;
            }
        }
        return false;
    }

    /**
     * Define o tipo de usuário e status para a tela.
     *
     * @param tipoCargo O cargo do usuário.
     * @param status O status do usuário.
     */
    public void setTipoUsuario(String tipoCargo, char status) {
        this.Cargo = tipoCargo;
        this.Status = status;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RelatorioFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RelatorioFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RelatorioFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RelatorioFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RelatorioFuncionario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBox;
    private javax.swing.JButton Limpar;
    private javax.swing.JTable Tabela;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
